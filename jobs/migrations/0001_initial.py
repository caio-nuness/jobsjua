# Generated by Django 5.1.6 on 2025-03-12 11:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Enterprise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cnpj', models.CharField(max_length=14, unique=True, verbose_name='CNPJ')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('sector', models.CharField(max_length=200, verbose_name='Setor')),
                ('phone', models.CharField(max_length=11, verbose_name='Telefone')),
                ('whatsapp', models.CharField(max_length=11, null=True, verbose_name='WhatsApp')),
                ('is_hiring', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], default=True, verbose_name='Está contratando')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Empresas',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Vacancie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titulo')),
                ('email', models.CharField(max_length=200, verbose_name='Email')),
                ('whatsapp', models.CharField(max_length=200, verbose_name='WhatsApp')),
                ('wage', models.FloatField(max_length=200, verbose_name='Salário')),
                ('modality', models.CharField(choices=[('CLT - Efetivo', 'CLT - Efetivo'), ('CLT - Ferista', 'CLT - Ferista'), ('CLT - Contrato', 'CLT - Contrato'), ('AVULSO - Diaria', 'AVULSO - Diaria'), ('AVULSO - Semanal', 'AVULSO - Semanal'), ('AVULSO - Quinzena', 'AVULSO - Quinzena'), ('CNPJ - Prestação de serviço', 'CNPJ - Prestação de serviço')], max_length=200, verbose_name='Modalidade')),
                ('weekly_journey', models.CharField(choices=[('Escala - 5x1', 'Escala - 5x1'), ('Escala - 5x2', 'Escala - 5x2'), ('Escala - 6x1', 'Escala - 6x1'), ('Escala - 12x36', 'Escala - 12x36'), ('Escala - 18x36', 'Escala - 18x36'), ('Diaria - 1 Dia', 'Diaria - 1 Dia'), ('Diaria - 7 Dias', 'Diaria - 7 Dias'), ('Diaria - 15 Dias', 'Diaria - 15 Dias')], max_length=200, verbose_name='Jornada')),
                ('work_shift', models.CharField(max_length=200, verbose_name='Turno')),
                ('state', models.BooleanField(choices=[(True, 'Vaga aberta'), (False, 'Vaga fechada')], default=True, verbose_name='Estado')),
                ('description', models.TextField(max_length=2000, verbose_name='Descrição')),
                ('create_at', models.DateTimeField(auto_now=True)),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Empresa')),
            ],
            options={
                'verbose_name_plural': 'Vagas',
            },
        ),
    ]
